variables:
  - group: ADO-TF-AWS-VPC-Int
  - name: region
    value: 'us-east-2'
  
trigger:
  branches:
    include:
    - add-build
  
stages:
  - stage: Validate
    displayName: Validate
    jobs:
    - job: init
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: 'terraform init -backend-config="bucket=skundu-terraform-remote-state-two" -backend-config="key=tf/terraform.tfstate" -backend-config="region=$(region)" -backend-config="access_key=$(access_key)" -backend-config="secret_key=$(secret_key)" -no-color'
          workingDirectory: '$(build.sourcesdirectory)'
        displayName: Terraform init
      - task: PowerShell@2
        inputs:
          filePath: 'ListWorkspace.ps1'
          arguments: '-CommaSeparatedListofWorkspaces "$(CommaSeparatedListofWorkspaces)"'
        displayName: Terraform validate

  - stage: Dev
    displayName: Dev
    jobs:
      - job: plan
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'terraform init -backend-config="bucket=skundu-terraform-remote-state-two" -backend-config="key=tf/terraform.tfstate" -backend-config="region=$(region)" -backend-config="access_key=$(access_key)" -backend-config="secret_key=$(secret_key)" -no-color'
            workingDirectory: '$(build.sourcesdirectory)'
          displayName: Terraform init
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'terraform workspace select Dev -no-color'
            workingDirectory: '$(build.sourcesdirectory)'
          displayName: "Terraform workspace: Dev"
        - task: PowerShell@2
          inputs:  
            targetType: 'inline'
            script: 'terraform plan -var region=$(region) -var access_key=$(access_key) -var secret_key=$(secret_key) -no-color'
            workingDirectory: '$(build.sourcesdirectory)'
          displayName: "Terraform plan"
  - stage: Approve
    displayName: Approve
    jobs:
      - job: approve
        pool:
          vmImage: ubuntu-latest
        displayName: Wait for approval
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 15 # task times out in 1 day
          inputs:
            notifyUsers: 
            instructions: 'Please validate the build configuration and resume'
            onTimeout: 'reject'
  - stage: Test
    displayName: Test
    jobs:
      - job: plan
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'terraform init -backend-config="bucket=skundu-terraform-remote-state-two" -backend-config="key=tf/terraform.tfstate" -backend-config="region=$(region)" -backend-config="access_key=$(access_key)" -backend-config="secret_key=$(secret_key)" -no-color'
            workingDirectory: '$(build.sourcesdirectory)'
          displayName: Terraform init
        # - task: PowerShell@2
        #   inputs:
        #     targetType: 'inline'
        #     script: 'terraform workspace select Dev -no-color'
        #     workingDirectory: '$(build.sourcesdirectory)'
        #   displayName: "Terraform workspace: Dev"
        # - task: PowerShell@2
        #   inputs:  
        #     targetType: 'inline'
        #     script: 'terraform plan -var region=$(region) -var access_key=$(access_key) -var secret_key=$(secret_key) -no-color'
        #     workingDirectory: '$(build.sourcesdirectory)'
        #   displayName: "Terraform Plan"
  - stage: Prod
    displayName: Prod
    jobs:
      - job: plan
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'terraform init -backend-config="bucket=skundu-terraform-remote-state-two" -backend-config="key=tf/terraform.tfstate" -backend-config="region=$(region)" -backend-config="access_key=$(access_key)" -backend-config="secret_key=$(secret_key)" -no-color'
            workingDirectory: '$(build.sourcesdirectory)'
          displayName: Terraform init
        # - task: PowerShell@2
        #   inputs:
        #     targetType: 'inline'
        #     script: 'terraform workspace select Dev -no-color'
        #     workingDirectory: '$(build.sourcesdirectory)'
        #   displayName: "Terraform workspace: Dev"
        # - task: PowerShell@2
        #   inputs:  
        #     targetType: 'inline'
        #     script: 'terraform plan -var region=$(region) -var access_key=$(access_key) -var secret_key=$(secret_key) -no-color'
        #     workingDirectory: '$(build.sourcesdirectory)'
        #   displayName: "Terraform Plan"